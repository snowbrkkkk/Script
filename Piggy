-- Serviços
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")

-- Criar GUI principal
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "TradeGui"
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 250, 0, 200)
frame.Position = UDim2.new(0.3, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Active = true
frame.Draggable = true

local stroke = Instance.new("UIStroke", frame)
stroke.Color = Color3.fromRGB(170, 0, 255)
stroke.Thickness = 2

local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 10)

-- Título
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "Snowzinn Hub"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 16

-- Botão fechar
local closeBtn = Instance.new("TextButton", frame)
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 5)
closeBtn.Text = "X"
closeBtn.BackgroundColor3 = Color3.fromRGB(40, 0, 60)
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.Font = Enum.Font.Gotham
closeBtn.TextSize = 14
Instance.new("UICorner", closeBtn)

closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Botão Lista de Jogadores
local listBtn = Instance.new("TextButton", frame)
listBtn.Size = UDim2.new(0, 120, 0, 40)
listBtn.Position = UDim2.new(0.5, -60, 0, 40)
listBtn.Text = "Lista de Jogadores"
listBtn.TextColor3 = Color3.new(1, 1, 1)
listBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
listBtn.Font = Enum.Font.GothamBold
listBtn.TextSize = 14
Instance.new("UICorner", listBtn)

-- Botão Accept
local acceptBtn = Instance.new("TextButton", frame)
acceptBtn.Size = UDim2.new(0, 100, 0, 40)
acceptBtn.Position = UDim2.new(0.5, -110, 1, -50)
acceptBtn.Text = "Accept"
acceptBtn.TextColor3 = Color3.new(1, 1, 1)
acceptBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
acceptBtn.Font = Enum.Font.GothamBold
acceptBtn.TextSize = 18
Instance.new("UICorner", acceptBtn)

-- Botão Auto-Accept
local autoAcceptBtn = Instance.new("TextButton", frame)
autoAcceptBtn.Size = UDim2.new(0, 100, 0, 40)
autoAcceptBtn.Position = UDim2.new(0.5, 10, 1, -50)
autoAcceptBtn.Text = "Auto-Accept"
autoAcceptBtn.TextColor3 = Color3.new(1, 1, 1)
autoAcceptBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
autoAcceptBtn.Font = Enum.Font.GothamBold
autoAcceptBtn.TextSize = 18
Instance.new("UICorner", autoAcceptBtn)

-- Inputs dos slots
local function createSlotInput(name, xOffset)
    local input = Instance.new("TextBox", gui)
    input.Size = UDim2.new(0, 100, 0, 30)
    input.Position = UDim2.new(0, frame.AbsolutePosition.X + xOffset, 0, frame.AbsolutePosition.Y + frame.AbsoluteSize.Y + 10)
    input.Text = name .. ": 1"
    input.Name = name
    input.PlaceholderText = "1-8"
    input.TextColor3 = Color3.new(1,1,1)
    input.BackgroundColor3 = Color3.fromRGB(35,35,35)
    input.Font = Enum.Font.Gotham
    input.TextSize = 14
    Instance.new("UICorner", input)
    return input
end

local slot1Input = createSlotInput("Slot1", 0)
local slot2Input = createSlotInput("Slot2", 110)

frame:GetPropertyChangedSignal("Position"):Connect(function()
    slot1Input.Position = UDim2.new(0, frame.AbsolutePosition.X, 0, frame.AbsolutePosition.Y + frame.AbsoluteSize.Y + 10)
    slot2Input.Position = UDim2.new(0, frame.AbsolutePosition.X + 110, 0, frame.AbsolutePosition.Y + frame.AbsoluteSize.Y + 10)
end)

-- Lista de jogadores
local playerList = Instance.new("Frame", gui)
playerList.Size = UDim2.new(0, 200, 0, 300)
playerList.Position = UDim2.new(0.65, 0, 0.3, 0)
playerList.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
playerList.Visible = false
Instance.new("UICorner", playerList)

local uiList = Instance.new("UIListLayout", playerList)
uiList.SortOrder = Enum.SortOrder.LayoutOrder
uiList.Padding = UDim.new(0, 5)

-- Botão Enviar-Trade fixo no topo da lista
local sendTradeBtn = Instance.new("TextButton", playerList)
sendTradeBtn.Size = UDim2.new(1, -10, 0, 30)
sendTradeBtn.Position = UDim2.new(0, 5, 0, 5)
sendTradeBtn.Text = "Enviar-Trade"
sendTradeBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sendTradeBtn.TextColor3 = Color3.new(1, 1, 1)
sendTradeBtn.Font = Enum.Font.GothamBold
sendTradeBtn.TextSize = 14
Instance.new("UICorner", sendTradeBtn)

uiList.Padding = UDim.new(0, 40)

local selectedPlayer = nil

listBtn.MouseButton1Click:Connect(function()
    playerList.Visible = not playerList.Visible
    
    -- Remove os botões anteriores de jogadores para atualizar
    for _, child in ipairs(playerList:GetChildren()) do
        if child:IsA("TextButton") and child ~= sendTradeBtn then
            child:Destroy()
        end
    end

    if playerList.Visible then
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= Players.LocalPlayer then
                local btn = Instance.new("TextButton", playerList)
                btn.Size = UDim2.new(1, -10, 0, 30)
                btn.Text = plr.Name
                btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                btn.TextColor3 = Color3.new(1, 1, 1)
                btn.Font = Enum.Font.Gotham
                btn.TextSize = 14
                Instance.new("UICorner", btn)

                btn.MouseButton1Click:Connect(function()
                    selectedPlayer = plr.Name
                    playerList.Visible = false
                end)
            end
        end
    end
end)

-- Função para enviar comando trade no chat
sendTradeBtn.MouseButton1Click:Connect(function()
    if not selectedPlayer then
        warn("Nenhum jogador selecionado!")
        return
    end
    -- Envia o comando "!trade nome"
    TextChatService.TextChannels.RBXGeneral:SendAsync("!trade " .. selectedPlayer)
end)

-- Função para enviar itens e depois aceitar
acceptBtn.MouseButton1Click:Connect(function()
    if not selectedPlayer then return end

    -- Ler os slots (garantir que é número entre 1 e 8)
    local function parseSlot(text)
        local n = tonumber(text:match("%d+"))
        if not n then return 1 end
        return math.clamp(n, 1, 8)
    end

    local slot1 = tostring(parseSlot(slot1Input.Text))
    local slot2 = tostring(parseSlot(slot2Input.Text))

    -- Enviar itens (exemplo: 1x do slot1 e 3x do slot2)
    ReplicatedStorage.Main.Trade:FireServer({"Add", "Item", 1, slot1})

    for i=1, 3 do
        ReplicatedStorage.Main.Trade:FireServer({"Add", "Item", 2, slot2})
        task.wait(0.5)
    end

    -- Depois que enviar os itens, enviar Accept
    ReplicatedStorage.Main.Trade:FireServer({"ACCEPT"})
end)

-- Auto-Accept loop
local autoAccepting = false
local autoAcceptThread

autoAcceptBtn.MouseButton1Click:Connect(function()
    autoAccepting = not autoAccepting
    if autoAccepting then
        autoAcceptBtn.Text = "Stop Auto-Accept"
        autoAcceptThread = coroutine.wrap(function()
            while autoAccepting do
                ReplicatedStorage.Main.Trade:FireServer({"ACCEPT"})
                task.wait(1) -- envia accept a cada 1 segundo
            end
        end)
        autoAcceptThread()
    else
        autoAcceptBtn.Text = "Auto-Accept"
    end
end)
